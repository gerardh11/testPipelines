name: CI/CD for Ionic App with Capacitor

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21'

      - name: Install dependencies
        run: npm install

      - name: Build Ionic App
        run: npm run build

  unit-tests:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Run Unit Tests
        run: ./node_modules/.bin/ng test --no-watch --no-progress --browsers=ChromeHeadless


  build-android:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      # 1. Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Setup Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Install dependencies
      - name: Install dependencies
        run: npm install

      # 4. Build Web Assets
      - name: Build Ionic App
        run: npm run build

      # 5. Sync Capacitor with Android
      - name: Sync Capacitor with Android
        run: npx cap sync android

      # 6. Build APK
      - name: Build APK
        run: |
          cd android
          ./gradlew assembleRelease

      # 7. Upload APK
      - name: Debug APK path
        run: |
          echo "Listing APKs in release folder:"
          ls -al android/app/build/outputs/apk/release

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/app-release-unsigned.apk
  build-ios:
    runs-on: macos-latest
    needs: unit-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Install dependencies
        run: npm ci
        
      - name: Build Web Assets
        run: npm run build
        
      - name: Sync Capacitor with iOS
        run: npx cap sync ios
        
      - name: Build IPA
        run: |
          cd ios/App
          xcodebuild -scheme App -configuration Release -archivePath build/App.xcarchive archive
          xcodebuild -exportArchive -archivePath build/App.xcarchive -exportPath build -exportOptionsPlist exportOptions.plist
        
      - name: Upload IPA
        uses: actions/upload-artifact@v3
        with:
          name: app-release.ipa
          path: ios/App/build/*.ipa
  upload-saucelabs:
    runs-on: ubuntu-latest
    needs: build-android
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download APK
        uses: actions/download-artifact@v3
        with:
          name: app-release.apk

      - name: Debug directory
        run: ls -al

      - name: Find APK in workspace
        run: find . -name "*.apk"

      - name: Upload APK to Sauce Labs
        env:
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
        run: |
          curl -u "$SAUCE_USERNAME:$SAUCE_ACCESS_KEY" \
              --location --request POST 'https://api.eu-central-1.saucelabs.com/v1/storage/upload' \
              --form 'payload=@app-release-unsigned.apk' \